///* Copyright 2009 The Revere Group
// *
// * Licensed under the Apache License, Version 2.0 (the "License");
// * you may not use this file except in compliance with the License.
// * You may obtain a copy of the License at
// *
// *     http://www.apache.org/licenses/LICENSE-2.0
// *
// * Unless required by applicable law or agreed to in writing, software
// * distributed under the License is distributed on an "AS IS" BASIS,
// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// * See the License for the specific language governing permissions and
// * limitations under the License.
// */
//package org.framework.dao;
//
//import org.hibernate.Session;
//import org.hibernate.SessionFactory;
//
//import java.io.Serializable;
//
///**
// * Base class for DAOs that uses Hibernate SessionFactory and HQL for searches.
// * This is the heart of Hibernate Generic DAO.
// * @author Administrator
// * 2013-11-2 下午2:50:04
// */
//public class HibernateBaseDao {
//
//	private SessionFactory sessionFactory;
//
//	public void setSessionFactory(SessionFactory sessionFactory) {
//		this.sessionFactory = sessionFactory;
//	}
//
//	protected SessionFactory getSessionFactory() {
//		return sessionFactory;
//	}
//
//	/**
//	 * Get the current Hibernate session
//	 */
//	protected Session getSession() {
//		return sessionFactory.getCurrentSession();
//	}
//
//
//	/**
//	 * <p>
//	 * Persist the given transient instance and add it to the datastore, first
//	 * assigning a generated identifier. (Or using the current value of the
//	 * identifier property if the assigned generator is used.) This operation
//	 * cascades to associated instances if the association is mapped with
//	 * cascade="save-update".
//	 *
//	 * <p>
//	 * This is different from <code>persist()</code> in that it does guarantee
//	 * that the object will be assigned an identifier immediately. With
//	 * <code>save()</code> a call is made to the datastore immediately if the id
//	 * is generated by the datastore so that the id can be determined. With
//	 * <code>persist</code> this call may not occur until flush time.
//	 *
//	 * @return The id of the newly saved entity.
//	 */
//	protected Serializable _save(Object entity) {
//		return getSession().save(entity);
//	}
//
//	/**
//	 * Persist the given transient instances and add them to the datastore,
//	 * first assigning a generated identifier. (Or using the current value of
//	 * the identifier property if the assigned generator is used.) This
//	 * operation cascades to associated instances if the association is mapped
//	 * with cascade="save-update".
//	 */
//	protected void _save(Object... entities) {
//		for (Object entity : entities) {
//			_save(entity);
//		}
//	}
//
//	/**
//	 * <p>
//	 * Calls Hibernate's <code>saveOrUpdate()</code>, which behaves as follows:
//	 *
//	 * <p>
//	 * Either <code>save()</code> or <code>update()</code> based on the
//	 * following rules
//	 * <ul>
//	 * <li>if the object is already persistent in this session, do nothing
//	 * <li>
//	 * if another object associated with the session has the same identifier,
//	 * throw an exception
//	 * <li>if the object has no identifier property, save() it
//	 * <li>if the object's identifier has the value assigned to a newly
//	 * instantiated object, save() it
//	 * <li>if the object is versioned (by a &lt;version&gt; or
//	 * &lt;timestamp&gt;), and the version property value is the same value
//	 * assigned to a newly instantiated object, save() it
//	 * <li>otherwise update() the object
//	 * </ul>
//	 */
//	protected void _saveOrUpdate(Object entity) {
//		getSession().saveOrUpdate(entity);
//	}
//
//	/**
//	 * JPA 规范的方法 跟hibernate 的save方法一样  如果用JPA 就用这个
//	 * @author Administrator
//	 * @param entities
//	 * void
//	 * 2013-11-2 下午3:01:21
//	 */
//	protected void _persist(Object... entities) {
//		for (Object entity : entities) {
//			getSession().persist(entity);
//		}
//	}
//}
