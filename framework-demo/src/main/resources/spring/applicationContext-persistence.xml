<?xml version="1.0" encoding="UTF-8"?><!-- xml声明 -->
<!-- xml Schema 命名空间 -->
<!-- 
	xmlns="http://www.springframework.org/schema/beans  声明xml文件默认的命名空间，表示未使用其他命名空间的所有标签的默认命名空间
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance 声明XML Schema 实例，声明后就可以使用 schemaLocation 属性了
	xmlns:aop="http://www.springframework.org/schema/aop 声明前缀为aop的命名空间，后面的URL用于标示命名空间的地址不会被解析器用于查找信息。
	其惟一的作用是赋予命名空间一个惟一的名称。当命名空间被定义在元素的开始标签中时，所有带有相同前缀的子元素都会与同一个命名空间相关联
	xmlns:context="http://www.springframework.org/schema/context 声明前缀为context的命名空间
	xmlns:tx="http://www.springframework.org/schema/tx 声明前缀为tx的命名空间
	
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans 命名空间的名字
            http://www.springframework.org/schema/beans/spring-beans.xsd xml schema的位置
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
    xsi:schemaLocation 结合前面的命名空间使用 一般有两个值  
     	1.需要使用的命名空间
     	2.供命名空间使用的 XML schema 的位置
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Proxool 数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>org.logicalcobwebs.proxool.ProxoolDriver</value>
		</property>
		<property name="url">
			<value>proxool.default</value>
		</property>
	</bean> -->
	<!-- 德鲁伊 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="dbType" value="${db}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="3000" /> <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" /> <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<!-- 关闭长时间不使用的连接 -->
		<property name="removeAbandoned" value="true" />  <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>

</beans>