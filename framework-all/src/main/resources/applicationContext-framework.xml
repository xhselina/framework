<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	<!-- spring 使用annotation -->
	<context:annotation-config />
	<!-- 指定使用cglib -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 使用 annotation 自动注册bean,并检查@Controller, @Service, @Repository注解已被注入-->
	<!--<context:component-scan base-package="org.framework.*.*.service,org.framework.*.*.dao"/>-->
	<context:component-scan base-package="org.framework.**.service,org.framework.**.dao">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"></context:include-filter>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"></context:include-filter>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"></context:include-filter>
	</context:component-scan>
	<!--扫描properties配置文件-->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:**/*.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true"/>
		<property name="order" value="0"/>
		<property name="fileEncoding" value="UTF-8"/>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:org/framework/**/mapper/*.xml"></property>
	</bean>

	<bean id="SqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="myBatisBaseDao" class="org.framework.dao.impl.MyBatisBaseDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="sqlSessionTemplate" ref="SqlSessionTemplate" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置注解实现管理事务（cglib：proxy-target-class="true"） -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="batchUpdate" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置事务的切入点 -->
	<aop:config expose-proxy="true">
		<!-- 一般情况下是给service层的方法加事务 -->
		<aop:pointcut id="targetMethod" expression="execution(* org.framework..service..impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="targetMethod" />
	</aop:config>

</beans>